<?phpif (!defined('ABSPATH')) {	exit;}if ( !class_exists( 'UWA_Email_Auction_Winner_Admin' ) ) {     /**     *     * @class UWA_Email_Auction_Winner_Admin     * @package Ultimate WooCommerce Auction PRO     * @author Nitesh Singh      * @since 3.0.0      *     */    class UWA_Email_Auction_Winner_Admin extends WC_Email {   	        /**         * Define email related information         *                  */        public function __construct() {            $this->id = 'woo_ua_email_auction_winner_admin';            $this->title = __( 'Ultimate Auction - Auction Won Admin', 'woo_ua' );                              $this->description = __( 'â€‹Email â€‹Can be sent to the admin after bidder won an auction', 'woo_ua' );            /*$this->heading = "{username}". __(' won an Auction - ', 'woo_ua'). "{auction_name}";*/            $this->heading = __('There is a winner', 'woo_ua');            $this->subject = "{username}". __(' won an Auction - ', 'woo_ua'). "{auction_name}";            $this->subject_owner = "{username}". __(' won an Auction - ', 'woo_ua'). "{auction_name}";            			$this->template_html = 'emails/auction-winner-admin.php';            $this->template_plain = 'emails/plain/auction-winner-admin.php'; 			$this->uwa_admin_won_enabled = $this->get_option( 'uwa_admin_won_enabled','yes');            $this->uwa_auction_owners_won_enabled = $this->get_option( 'uwa_auction_owners_won_enabled', 'yes');            /* Trigger on new paid orders */            add_action( 'woo_ua_auctions_won_email_bidder_admin',  array( $this, 'trigger' ), 10, 2 );                        /* Call parent constructor to load any other defaults not explicity defined here */            parent::__construct();			if ($this->uwa_admin_won_enabled === 'yes') {										$this->recipient = $this->get_option( 'recipient' );					if ( ! $this->recipient ){						$this->recipient = get_option( 'admin_email' );					}			}                }        /**         * Define trigger         *         * @param int $product_id, int $winneruser         *         */        public function trigger($product_id, $winneruser) {            /* Check is email enable or not */            if ( !$this->is_enabled() ) {                return;            }			$mail_sent = get_post_meta($product_id, "woo_ua_winner_mail_sent", true);					if ( $mail_sent =='1' ) {                return;            }			            $user = get_user_by('ID', $winneruser);            $url_product = get_permalink($product_id);            $username = $user->user_login;             $auction_name =  get_the_title($product_id);            $post_obj = get_post($product_id);            $product = wc_get_product($product_id);              $post_author_id = $post_obj->post_author;            $user_obj = get_user_by( 'ID', $post_author_id);           						$recipients1 = array();            			if ($this->uwa_admin_won_enabled ===  'yes') {								$url_product = get_edit_post_link($product_id);                /*$get_heading_admin = $this->get_option( 'heading' );			    $adminmail_heading = $get_heading_admin ? $get_heading_admin : $this->heading;				$adminmail_heading_string = str_replace( '{username}', $username, $adminmail_heading );                $adminmail_heading_string = str_replace( '{auction_name}', $auction_name, $adminmail_heading_string );				$this->heading = $adminmail_heading_string;*/					$this->object = array(						'user_email'    => $user->data->user_email,						'user_name'     => $user->user_login, 						'user_id'       => $winneruser,                        'owner_name'    => $user_obj->user_login, // auction owner                        'owner_id'      => $post_author_id, // auction owner id 						'product_id'    => $product_id,						'edit_url_product'   => $url_product,						'user_type'     => "admin",					);									$recipients1[]= $this->get_recipient();				if ( count( $recipients1 ) > 0 ) {                    $get_subj_admin = $this->get_option( 'subject_admin' );                    $adminmail_subject = $get_subj_admin ? $get_subj_admin : $this->subject;														$adminmail_subject_string = str_replace( '{username}', $username, $adminmail_subject );                    $adminmail_subject_string = str_replace( '{auction_name}', $auction_name, $adminmail_subject_string );					    foreach ( $recipients1 as $key=>$value) {											$this->send( $value, $adminmail_subject_string,$this->get_content(), $this->get_headers(), $this->get_attachments() );					}				}							}            if ($this->uwa_auction_owners_won_enabled ===  'yes') {                                $email = $user_obj->user_email;                                if($email){                    $url_product = get_permalink($product_id);					/*$get_heading_admin = $this->get_option( 'heading' );					$adminmail_heading = $get_heading_admin ? $get_heading_admin : $this->heading;					$adminmail_heading_string = str_replace( '{username}', $username, $adminmail_heading );					$adminmail_heading_string = str_replace( '{auction_name}', $auction_name, $adminmail_heading_string );					$this->heading = $adminmail_heading_string;  */                    $this->object = array(                        'user_email'    => $email,                        'user_name'     => $user->user_login, // winner user                        'user_id'       => $winneruser, // winner id                        'owner_name'    => $user_obj->user_login, // auction owner                        'owner_id'      => $post_author_id, // auction owner id                        'product_id'    => $product_id,                        'url_product'   => $url_product,                        'user_type'     => "auction_owner",                    );					$get_subj_owner = $this->get_option( 'subject_owner' );					$ownermail_subject = $get_subj_owner ? $get_subj_owner : $this->subject;														$ownermail_subject_string = str_replace( '{username}', $username, $ownermail_subject );					$ownermail_subject_string = str_replace( '{auction_name}', $auction_name, $ownermail_subject_string );                    $this->send( $email, $ownermail_subject_string, $this->get_content(), $this->get_headers(), $this->get_attachments());                                  }            }                   		} /* end of function - trigger */                /**         * Get content html          *         * @return array         *         */        public function get_content_html() {            $get_heading_admin = $this->get_option( 'heading' );            $uwa_email_heading = $get_heading_admin ? $get_heading_admin : $this->heading;			// $uwa_email_heading = $this->format_string($this->heading);            return wc_get_template_html( $this->template_html,                 array(                    //'email_heading' => $this->get_heading(),                                        'email_heading' => $uwa_email_heading,                                'sent_to_admin' => true,                    'plain_text'    => false,                    'email'         => $this                ),'', UW_AUCTION_PRO_WC_TEMPLATE);        }        /**         * Get content plain          *         * @return array         *         */        public function get_content_plain() {                        $get_heading_admin = $this->get_option( 'heading' );            $uwa_email_heading = $get_heading_admin ? $get_heading_admin : $this->heading;            // $uwa_email_heading = $this->format_string($this->heading);            return wc_get_template_html( $this->template_plain,                 array(                    //'email_heading' => $this->get_heading(),                                       'email_heading' => $uwa_email_heading,                    'sent_to_admin' => true,                    'plain_text'    => true,                    'email'         => $this                ),'', UW_AUCTION_PRO_WC_TEMPLATE);        }        /**         * Add form fields for email                 *         */        public function init_form_fields() {            $this->form_fields = array(                'enabled' => array(                    'title'   => __( 'Enable/Disable', 'woocommerce' ),                    'type'    => 'checkbox',                    'label'   => __( 'Enable this email notification', 'woocommerce' ),                    'default' => 'yes'                ),				'uwa_admin_won_enabled' => array(    				'title' 		=> __( 'Enabled for Admin.', 'woo_ua' ),    				'type' 			=> 'checkbox',    				'label' 		=> __( 'Send won email notification to admin when Bidder won auction.', 'woo_ua' ),    				'default' 		=> 'yes'			     ),                'uwa_auction_owners_won_enabled' => array(                    'title'         => __( 'Enabled for Auction Owners.', 'woo_ua' ),                    'type'          => 'checkbox',                    'label'         => __( 'Send won email notification to auction owners when Bidder won auction.', 'woo_ua' ),                    'default'       => 'yes'                 ),                  'recipient'    => array(                    'title'       => __( 'Recipient', 'woocommerce' ),                    'type'        => 'text',                    'description' => sprintf( __( 'Enter recipients (comma separated) for admin email.Leave blank to use the default subject:- <code>%s</code>.', 'woo_ua' ), esc_attr( get_option('admin_email') ) ),                    'placeholder' => '',                    'default'     => '',                    'user_type'   => 'admin',                    'desc_tip'    => true                ),                   'subject_admin'    => array(                    'title'       => __( 'Subject for Admin', 'woo_ua' ),                    'type'        => 'text',                    'description' => sprintf( __( 'Enter the subject of the email that is sent to the admin after successfully placing a bid.Leave blank to use the default subject:- <code>%s</code>.', 'woo_ua' ),                         $this->subject ),                    'placeholder' => '',                    'default'     => '',                    'desc_tip'    => true                ),                'subject_owner'    => array(                    'title'       => __( 'Subject for Auction Owners', 'woo_ua' ),                    'type'        => 'text',                    'description' => sprintf( __( 'Enter the subject of the email that is sent to the auction owners after successfully placing a bid.Leave blank to use the default subject:- <code>%s</code>.', 'woo_ua' ),                         $this->subject_owner ),                    'placeholder' => '',                    'default'     => '',                    'desc_tip'    => true                ),                'heading'    => array(                    'title'       => __( 'Email Heading', 'woocommerce' ),                    'type'        => 'text',                    'description' => sprintf( __( 'Enter the Heading of the email that is sent to the bidder after winning an auction. Leave blank to use the default heading: <code>%s</code>.', 'woo_ua' ), $this->heading ),                    'placeholder' => '',                    'default'     => '',                    'desc_tip'    => true                ),                'email_type' => array(                    'title'       => __( 'Email type', 'woocommerce' ),                    'type'        => 'select',                    'description' => __( 'Choose which format of email to send.', 'woocommerce' ),                    'default'     => 'html',                    'class'       => 'email_type wc-enhanced-select',                    'options'     => $this->get_email_type_options(),                    'desc_tip'    => true                )            );        }    } /* end of class */} /* end of if - class exists */return new UWA_Email_Auction_Winner_Admin();