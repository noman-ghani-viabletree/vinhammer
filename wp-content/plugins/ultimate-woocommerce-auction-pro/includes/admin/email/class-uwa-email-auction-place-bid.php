<?phpif (!defined('ABSPATH')) {    exit;}if ( ! class_exists( 'UWA_Email_Place_Bid' ) ) {    /**     *     * @class UWA_Email_Place_Bid     * @package Ultimate WooCommerce Auction PRO     * @author Nitesh Singh      * @since 1.0      *     */    class UWA_Email_Place_Bid extends WC_Email {        /**         * Define email related information         *                  */                public function __construct() {                        $this->id = 'woo_ua_email_place_bid';            $this->title = __('Ultimate Auction - Bid Notification', 'woo_ua');            $this->customer_email = true;            $this->description = __('â€‹Email Notification sent to bidder when Bidder places a bid.', 'woo_ua');                  $this->heading = __('You recently placed a bid on {site_title}', 'woo_ua');            $this->subject = __('You recently placed a bid on {site_title}', 'woo_ua');            $this->template_html = 'emails/placed-bid.php';            $this->template_plain = 'emails/plain/placed-bid.php';                             /* Trigger when bid placed */            add_action( 'uwa_pro_bid_place_email', array( $this, 'trigger' ), 10, 2 );            /* Call parent constructor to load any other defaults not explicity defined here */            parent::__construct();                   /*if ($this->uwa_admin_enabled ===  'yes') {                                        $this->recipient = $this->get_option( 'recipient' );                    if ( ! $this->recipient ){                        $this->recipient = get_option( 'admin_email' );                    }                }*/        }        /**         * Define trigger         *         * @param object $product , int $user_id         *         */        public function trigger( $user_id, $product ) {                       /* Check is email enable or not */            if ( !$this->is_enabled() ) {                return;            }            $user = get_user_by('id', $user_id);            $url_product = get_permalink($product->get_id());            $recipients2 =array();                                $this->object = array(            'user_email'    => $user->data->user_email,            'user_name'     => $user->data->user_login,            'product_name'  => $product->get_title(),            'product'       => $product,            'url_product'   => $url_product,            'user_type'   => "bidder",            'placebid_userid' => $user_id,             );                          $recipients2[]= $this->object['user_email'];            if ( count( $recipients2 ) > 0 ) {                foreach ( $recipients2 as $key=>$value) {                                   $this->send( $value, $this->get_subject(),$this->get_content(),$this->get_headers(),                        $this->get_attachments() );                }            }        }        /**         * Get content html          *         * @return array         *         */        public function get_content_html() {            return wc_get_template_html( $this->template_html,                 array(                    'email_heading' => $this->get_heading(),                    'sent_to_admin' => true,                    'plain_text'    => false,                    'email'         => $this                ),'', UW_AUCTION_PRO_WC_TEMPLATE );        }        /**         * Get content plain          *         * @return array         *         */        public function get_content_plain() {            return wc_get_template_html( $this->template_plain,                 array(                    'email_heading' => $this->get_heading(),                    'sent_to_admin' => true,                    'plain_text'    => true,                    'email'         => $this                ),'', UW_AUCTION_PRO_WC_TEMPLATE );        }        /**         * Add form fields for email                 *         */        public function init_form_fields() {            $this->form_fields = array(                'enabled'    => array(                    'title'   => __( 'Enable/Disable', 'woocommerce' ),                    'type'    => 'checkbox',                    'label'   => __( 'Enable this email notification', 'woocommerce' ),                    'default' => 'yes'                ),                  'subject'    => array(                    'title'       => __( 'Subject', 'woocommerce' ),                    'type'        => 'text',                    'description' => sprintf( __( 'Enter the subject of the email that is sent to the bidder after successfully placing a bid.Leave blank to use the default subject:- <code>%s</code>.', 'woo_ua' ), $this->subject ),                    'placeholder' => '',                    'default'     => '',                    'desc_tip'    => true                ),                'heading'    => array(                    'title'       => __( 'Email Heading', 'woocommerce' ),                    'type'        => 'text',                    'description' => sprintf( __( 'Enter the Heading of the email that is sent to the bidder after successfully placing a bid. Leave blank to use the default heading: <code>%s</code>.', 'woo_ua' ), $this->heading ),                    'placeholder' => '',                    'default'     => '',                    'desc_tip'    => true                ),                'email_type' => array(                    'title'       => __( 'Email type', 'woocommerce' ),                    'type'        => 'select',                    'description' => __( 'Choose which format of email to send.', 'woocommerce' ),                    'default'     => 'html',                    'class'       => 'email_type wc-enhanced-select',                    'options'     => $this->get_email_type_options(),                    'desc_tip'    => true                )            );        }            } /* end of class */} /* end of if - class exists */return new UWA_Email_Place_Bid();