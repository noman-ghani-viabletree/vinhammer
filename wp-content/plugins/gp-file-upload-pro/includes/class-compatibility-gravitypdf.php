<?php

class GPFUP_Compatibility_GravityPDF {

	private static $instance = null;

	public static function get_instance() {
		if ( null == self::$instance ) {
			self::$instance = new self;
		}

		return self::$instance;
	}

	public function __construct() {
		add_filter( 'gfpdf_pdf_field_content_fileupload', array( $this, 'pdf_html' ), 10, 5 );
	}

	/**
	 * @param $value string The field's content to be included in the PDF
	 * @param $field array The current field being processed
	 * @param $entry array The Gravity Forms entry array
	 * @param $form array The form array
	 * @param $pdf_field object The current field helper class.
	 *
	 * @return mixed
	 */
	public function pdf_html( $value, $field, $entry, $form, $pdf_field ) {
		if ( ! rgar( $field, 'multipleFiles' ) || ! rgar( $field, 'gpfupEnable' ) ) {
			return $value;
		}

		/**
		 * @var string Value from the entry. Is JSON if files are provided.
		 */
		$entry_value = rgar( $entry, $field->id );

		if ( ! $entry_value ) {
			return $entry_value;
		}

		$file_urls = json_decode( $entry_value, true );
		$html      = '';

		foreach ( $file_urls as $file_index => $file_url ) {
			/* Skip file if the file is not an image supported by mPDF */
			$extension = pathinfo( $file_url, PATHINFO_EXTENSION );
			$file_name = pathinfo( $file_url, PATHINFO_FILENAME );

			if ( ! in_array( strtolower( $extension ), array(
				'gif',
				'png',
				'jpg',
				'jpeg',
				'wmf',
				'svg',
				'bmp',
			), true ) ) {
				// Link directly to other file types (e.g. PDF) without further processing
				$html .= '<ul><li><a href="' . esc_url( $file_url ) . '">' . $file_name . '</a>' . "</li></ul>\n";
				continue;
			}

			/**
			 * Filter whether or not to wrap images in PDFs generated by Gravity PDF with a tags that link to the
			 * original image URL.
			 *
			 * @param boolean $link_images Whether or not to link images.
			 * @param string $file_url URL to file.
			 * @param array $field Current File Uploader field.
			 * @param array $entry Current entry being processed.
			 * @param array $form Current Gravity Form array.
			 *
			 * @since 1.0-beta-2.0
			 */
			$link_images = apply_filters( 'gpfup_gravity_pdf_link_images', true, $file_url, $field, $entry, $form );

			if ( $link_images ) {
				$html .= '<a href="' . esc_url( $file_url ) . '"><img src="' . $file_url . '" /></a>' . "\n";
			} else {
				$html .= '<img src="' . $file_url . '" />' . "\n";
			}

			if ( count( $file_urls ) > 1 && $file_index + 1 < count( $file_urls ) ) {
				$html .= "<br />\n";
			}
		}

		/**
		 * Strip all HTML except for img, a, ul, li, and br tags.
		 */
		return wp_kses( $html, array(
			'img' => array( 'src' => array() ),
			'a'   => array( 'href' => array() ),
			'br'  => array(),
			'ul'  => array(),
			'li'  => array(),
		) );
	}


}

function gpfup_compatibility_gravitypdf() {
	return GPFUP_Compatibility_GravityPDF::get_instance();
}
